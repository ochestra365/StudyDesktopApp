<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>